#!/usr/bin/env python
# -*- coding: utf-8
import sys
import os
import getopt
from pathlib import Path

import inoa.utils as utils
from inoa.txtcolors import textcolor

# example
# python ./bin/inoa-run-cmscan
#   -i /Users/fdb/DATA/EukGenome_database/Hackl2020/ncbi_dataset/data/GCA_008330645.1/GCA_008330645.1_CrBVI_genomic.fna
#   -o /Users/fdb/DATA/EukGenome_database/Hackl2020/

def usage():
    filename = os.path.basename(__file__)
    print("""
   usage: {file} [OPTIONS]

   options:
      -h, --help                  Print this usage info
      -i, --input                 input file or directory
      -o, --output                output directory
   """.format(file=filename))


def welcome():
    filename = os.path.basename(__file__)
    print("""
    {file}
    """.format(file=filename))


def main(argv):
    input_file = 'default'
    output_dir = 'default'
    rfam_clanin_path = "/Users/fdb/DATA/annotation_databases/Rfam/Rfam.clanin"
    rfam_cm_path = "/Users/fdb/DATA/annotation_databases/Rfam/Rfam.cm"

    try:
        opts, args = getopt.getopt(argv, "hi:o:", ["help", "input=", "output="])
    except getopt.GetoptError as err:
        print(str(err))
        usage()
        sys.exit(2)
    for opt, arg in opts:
        if opt in ("-h", "--help"):
            usage()
            sys.exit()
        elif opt in ("-i", "--input"):
            input_file = arg
        elif opt in ("-o", "--output"):
            output_dir = arg
    welcome()

    print('input:', textcolor(input_file, 'blue'))
    print('output directory:', textcolor(output_dir, 'blue'))

    #run-barrnap
    basename_input = os.path.basename(input_file)
    base_stem = Path(input_file).stem
    tmp_outpath = output_dir + base_stem + ".cmscan.tblout"

    print('input_file:', textcolor(basename_input, 'blue'))
    print('input_stem:', textcolor(base_stem, 'blue'))
    print('output_file:', textcolor(tmp_outpath, 'blue'))
    print('rfam_clanin_path:', textcolor(rfam_clanin_path, 'blue'))
    print('rfam_cm_path:', textcolor(rfam_cm_path, 'blue'))

    cmd_line = ('cmscan -Z 5.874406 --cut_ga --rfam --nohmmonly --tblout "%s" --fmt 2 --clanin "%s" "%s" "%s"' % (
                                            tmp_outpath,
                                            rfam_clanin_path,
                                            rfam_cm_path,
                                            input_file
                                            ))
    print('Command:', textcolor(cmd_line, 'blue'))

    utils.run_cmd(cmd_line)


if __name__ == "__main__":
    main(sys.argv[1:])
